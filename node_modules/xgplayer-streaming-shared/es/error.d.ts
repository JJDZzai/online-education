export namespace ERR {
    const MANIFEST: string;
    const NETWORK: string;
    const NETWORK_TIMEOUT: string;
    const NETWORK_FORBIDDEN: string;
    const NETWROK_RANGE_NOT_SATISFIABLE: string;
    const DEMUX: string;
    const REMUX: string;
    const MEDIA: string;
    const DRM: string;
    const OTHER: string;
    const RUNTIME: string;
    namespace SUB_TYPES {
        const FLV: string;
        const HLS: string;
        const MP4: string;
        const FMP4: string;
        const MSE_ADD_SB: string;
        const MSE_APPEND_BUFFER: string;
        const MSE_OTHER: string;
        const MSE_FULL: string;
        const OPTION: string;
        const DASH: string;
        const LICENSE: string;
        const CUSTOM_LICENSE: string;
        const MSE_HIJACK: string;
        const EME_HIJACK: string;
        const SIDX: string;
        const NO_CANPLAY_ERROR: string;
        const BUFFERBREAK_ERROR: string;
        const MEDIA_ERR_ABORTED: string;
        const MEDIA_ERR_NETWORK: string;
        const MEDIA_ERR_DECODE: string;
        const MEDIA_ERR_SRC_NOT_SUPPORTED: string;
        const MEDIA_ERR_CODEC_NOT_SUPPORTED: string;
        const MEDIA_ERR_URL_EMPTY: string;
    }
}
export const ERR_CODE: {
    [x: string]: number | {
        HLS: number;
        DASH: number;
        FLV?: undefined;
        MP4?: undefined;
        FMP4?: undefined;
        SIDX?: undefined;
        MEDIA_ERR_ABORTED?: undefined;
        MEDIA_ERR_NETWORK?: undefined;
        MEDIA_ERR_DECODE?: undefined;
        MEDIA_ERR_SRC_NOT_SUPPORTED?: undefined;
        MEDIA_ERR_CODEC_NOT_SUPPORTED?: undefined;
        MEDIA_ERR_URL_EMPTY?: undefined;
        MSE_ADD_SB?: undefined;
        MSE_APPEND_BUFFER?: undefined;
        MSE_OTHER?: undefined;
        MSE_FULL?: undefined;
        MSE_HIJACK?: undefined;
        EME_HIJACK?: undefined;
        LICENSE?: undefined;
        CUSTOM_LICENSE?: undefined;
        NO_CANPLAY_ERROR?: undefined;
        BUFFERBREAK_ERROR?: undefined;
    } | {
        FLV: number;
        HLS: number;
        MP4: number;
        FMP4: number;
        SIDX: number;
        DASH?: undefined;
        MEDIA_ERR_ABORTED?: undefined;
        MEDIA_ERR_NETWORK?: undefined;
        MEDIA_ERR_DECODE?: undefined;
        MEDIA_ERR_SRC_NOT_SUPPORTED?: undefined;
        MEDIA_ERR_CODEC_NOT_SUPPORTED?: undefined;
        MEDIA_ERR_URL_EMPTY?: undefined;
        MSE_ADD_SB?: undefined;
        MSE_APPEND_BUFFER?: undefined;
        MSE_OTHER?: undefined;
        MSE_FULL?: undefined;
        MSE_HIJACK?: undefined;
        EME_HIJACK?: undefined;
        LICENSE?: undefined;
        CUSTOM_LICENSE?: undefined;
        NO_CANPLAY_ERROR?: undefined;
        BUFFERBREAK_ERROR?: undefined;
    } | {
        FMP4: number;
        MP4: number;
        HLS?: undefined;
        DASH?: undefined;
        FLV?: undefined;
        SIDX?: undefined;
        MEDIA_ERR_ABORTED?: undefined;
        MEDIA_ERR_NETWORK?: undefined;
        MEDIA_ERR_DECODE?: undefined;
        MEDIA_ERR_SRC_NOT_SUPPORTED?: undefined;
        MEDIA_ERR_CODEC_NOT_SUPPORTED?: undefined;
        MEDIA_ERR_URL_EMPTY?: undefined;
        MSE_ADD_SB?: undefined;
        MSE_APPEND_BUFFER?: undefined;
        MSE_OTHER?: undefined;
        MSE_FULL?: undefined;
        MSE_HIJACK?: undefined;
        EME_HIJACK?: undefined;
        LICENSE?: undefined;
        CUSTOM_LICENSE?: undefined;
        NO_CANPLAY_ERROR?: undefined;
        BUFFERBREAK_ERROR?: undefined;
    } | {
        MEDIA_ERR_ABORTED: number;
        MEDIA_ERR_NETWORK: number;
        MEDIA_ERR_DECODE: number;
        MEDIA_ERR_SRC_NOT_SUPPORTED: number;
        MEDIA_ERR_CODEC_NOT_SUPPORTED: number;
        MEDIA_ERR_URL_EMPTY: number;
        MSE_ADD_SB: number;
        MSE_APPEND_BUFFER: number;
        MSE_OTHER: number;
        MSE_FULL: number;
        MSE_HIJACK: number;
        EME_HIJACK: number;
        HLS?: undefined;
        DASH?: undefined;
        FLV?: undefined;
        MP4?: undefined;
        FMP4?: undefined;
        SIDX?: undefined;
        LICENSE?: undefined;
        CUSTOM_LICENSE?: undefined;
        NO_CANPLAY_ERROR?: undefined;
        BUFFERBREAK_ERROR?: undefined;
    } | {
        LICENSE: number;
        CUSTOM_LICENSE: number;
        HLS?: undefined;
        DASH?: undefined;
        FLV?: undefined;
        MP4?: undefined;
        FMP4?: undefined;
        SIDX?: undefined;
        MEDIA_ERR_ABORTED?: undefined;
        MEDIA_ERR_NETWORK?: undefined;
        MEDIA_ERR_DECODE?: undefined;
        MEDIA_ERR_SRC_NOT_SUPPORTED?: undefined;
        MEDIA_ERR_CODEC_NOT_SUPPORTED?: undefined;
        MEDIA_ERR_URL_EMPTY?: undefined;
        MSE_ADD_SB?: undefined;
        MSE_APPEND_BUFFER?: undefined;
        MSE_OTHER?: undefined;
        MSE_FULL?: undefined;
        MSE_HIJACK?: undefined;
        EME_HIJACK?: undefined;
        NO_CANPLAY_ERROR?: undefined;
        BUFFERBREAK_ERROR?: undefined;
    } | {
        NO_CANPLAY_ERROR: number;
        BUFFERBREAK_ERROR: number;
        HLS?: undefined;
        DASH?: undefined;
        FLV?: undefined;
        MP4?: undefined;
        FMP4?: undefined;
        SIDX?: undefined;
        MEDIA_ERR_ABORTED?: undefined;
        MEDIA_ERR_NETWORK?: undefined;
        MEDIA_ERR_DECODE?: undefined;
        MEDIA_ERR_SRC_NOT_SUPPORTED?: undefined;
        MEDIA_ERR_CODEC_NOT_SUPPORTED?: undefined;
        MEDIA_ERR_URL_EMPTY?: undefined;
        MSE_ADD_SB?: undefined;
        MSE_APPEND_BUFFER?: undefined;
        MSE_OTHER?: undefined;
        MSE_FULL?: undefined;
        MSE_HIJACK?: undefined;
        EME_HIJACK?: undefined;
        LICENSE?: undefined;
        CUSTOM_LICENSE?: undefined;
    };
};
export class StreamingError extends Error {
    static create(type: any, subType: any, origin: any, payload: any, msg: any): StreamingError;
    static network(error: any): StreamingError;
    constructor(type: any, subType: any, origin: any, payload: any, msg: any);
    errorType: any;
    originError: any;
    ext: any;
    errorCode: any;
    errorMessage: string;
}
