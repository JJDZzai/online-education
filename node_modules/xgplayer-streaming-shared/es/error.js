import { defineProperty as _defineProperty, inherits as _inherits, createSuper as _createSuper, createClass as _createClass, classCallCheck as _classCallCheck, wrapNativeSuper as _wrapNativeSuper } from "./_virtual/_rollupPluginBabelHelpers.js";
var _ERR_CODE;
var ERR = {
  MANIFEST: "manifest",
  NETWORK: "network",
  NETWORK_TIMEOUT: "network_timeout",
  NETWORK_FORBIDDEN: "network_forbidden",
  NETWROK_RANGE_NOT_SATISFIABLE: "network_range_not_satisfiable",
  DEMUX: "demux",
  REMUX: "remux",
  MEDIA: "media",
  DRM: "drm",
  OTHER: "other",
  RUNTIME: "runtime",
  SUB_TYPES: {
    FLV: "FLV",
    HLS: "HLS",
    MP4: "MP4",
    FMP4: "FMP4",
    MSE_ADD_SB: "MSE_ADD_SB",
    MSE_APPEND_BUFFER: "MSE_APPEND_BUFFER",
    MSE_OTHER: "MSE_OTHER",
    MSE_FULL: "MSE_FULL",
    OPTION: "OPTION",
    DASH: "DASH",
    LICENSE: "LICENSE",
    CUSTOM_LICENSE: "CUSTOM_LICENSE",
    MSE_HIJACK: "MSE_HIJACK",
    EME_HIJACK: "EME_HIJACK",
    SIDX: "SIDX",
    NO_CANPLAY_ERROR: "NO_CANPLAY_ERROR",
    BUFFERBREAK_ERROR: "BUFFERBREAK_ERROR",
    MEDIA_ERR_ABORTED: "MEDIA_ERR_ABORTED",
    MEDIA_ERR_NETWORK: "MEDIA_ERR_NETWORK",
    MEDIA_ERR_DECODE: "MEDIA_ERR_DECODE",
    MEDIA_ERR_SRC_NOT_SUPPORTED: "MEDIA_ERR_SRC_NOT_SUPPORTED",
    MEDIA_ERR_CODEC_NOT_SUPPORTED: "MEDIA_ERR_CODEC_NOT_SUPPORTED",
    MEDIA_ERR_URL_EMPTY: "MEDIA_ERR_URL_EMPTY"
  }
};
var ERR_CODE = (_ERR_CODE = {}, _defineProperty(_ERR_CODE, ERR.MANIFEST, {
  HLS: 1100,
  DASH: 1200
}), _defineProperty(_ERR_CODE, ERR.NETWORK, 2100), _defineProperty(_ERR_CODE, ERR.NETWORK_TIMEOUT, 2101), _defineProperty(_ERR_CODE, ERR.NETWORK_FORBIDDEN, 2103), _defineProperty(_ERR_CODE, ERR.NETWROK_RANGE_NOT_SATISFIABLE, 2116), _defineProperty(_ERR_CODE, ERR.DEMUX, {
  FLV: 3100,
  HLS: 3200,
  MP4: 3300,
  FMP4: 3400,
  SIDX: 3410
}), _defineProperty(_ERR_CODE, ERR.REMUX, {
  FMP4: 4100,
  MP4: 4200
}), _defineProperty(_ERR_CODE, ERR.MEDIA, {
  MEDIA_ERR_ABORTED: 5101,
  MEDIA_ERR_NETWORK: 5102,
  MEDIA_ERR_DECODE: 5103,
  MEDIA_ERR_SRC_NOT_SUPPORTED: 5104,
  MEDIA_ERR_CODEC_NOT_SUPPORTED: 5105,
  MEDIA_ERR_URL_EMPTY: 5106,
  MSE_ADD_SB: 5200,
  MSE_APPEND_BUFFER: 5201,
  MSE_OTHER: 5202,
  MSE_FULL: 5203,
  MSE_HIJACK: 5204,
  EME_HIJACK: 5301
}), _defineProperty(_ERR_CODE, ERR.DRM, {
  LICENSE: 7100,
  CUSTOM_LICENSE: 7200
}), _defineProperty(_ERR_CODE, ERR.OTHER, 8e3), _defineProperty(_ERR_CODE, ERR.RUNTIME, {
  NO_CANPLAY_ERROR: 9001,
  BUFFERBREAK_ERROR: 9002
}), _ERR_CODE);
var StreamingError = /* @__PURE__ */ function(_Error) {
  _inherits(StreamingError2, _Error);
  var _super = _createSuper(StreamingError2);
  function StreamingError2(type, subType, origin, payload, msg) {
    var _this;
    _classCallCheck(this, StreamingError2);
    _this = _super.call(this, msg || (origin === null || origin === void 0 ? void 0 : origin.message));
    _this.errorType = type === ERR.NETWORK_TIMEOUT ? ERR.NETWORK : type;
    _this.originError = origin;
    _this.ext = payload;
    _this.errorCode = ERR_CODE[type][subType] || ERR_CODE[type];
    _this.errorMessage = _this.message;
    if (!_this.errorCode) {
      _this.errorType = ERR.OTHER;
      _this.errorCode = ERR_CODE[_this.errorType];
    }
    return _this;
  }
  _createClass(StreamingError2, null, [{
    key: "create",
    value: function create(type, subType, origin, payload, msg) {
      if (type instanceof StreamingError2) {
        return type;
      } else if (type instanceof Error) {
        origin = type;
        type = "";
      }
      if (!type)
        type = ERR.OTHER;
      return new StreamingError2(type, subType, origin, payload, msg);
    }
  }, {
    key: "network",
    value: function network(error) {
      var _error$response;
      return new StreamingError2(error !== null && error !== void 0 && error.isTimeout ? ERR.NETWORK_TIMEOUT : ERR.NETWORK, null, error instanceof Error ? error : null, {
        url: error === null || error === void 0 ? void 0 : error.url,
        response: error === null || error === void 0 ? void 0 : error.response,
        httpCode: error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status
      });
    }
  }]);
  return StreamingError2;
}(/* @__PURE__ */ _wrapNativeSuper(Error));
export { ERR, ERR_CODE, StreamingError };
