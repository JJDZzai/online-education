import { isDate, isObject } from "../is.js";
function getRangeValue(value) {
  if (!value || value[0] === null || value[0] === void 0 || value[0] === 0 && (value[1] === null || value[1] === void 0)) {
    return;
  }
  var ret = "bytes=" + value[0] + "-";
  if (value[1])
    ret += value[1];
  return ret;
}
function encode(val) {
  return encodeURIComponent(val).replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]");
}
function setUrlParams(url, params) {
  if (!url)
    return;
  if (!params)
    return url;
  var v;
  var str = Object.keys(params).map(function(k) {
    v = params[k];
    if (v === null || v === void 0)
      return;
    if (Array.isArray(v)) {
      k = k + "[]";
    } else {
      v = [v];
    }
    return v.map(function(x) {
      if (isDate(x)) {
        x = x.toISOString();
      } else if (isObject(x)) {
        x = JSON.stringify(x);
      }
      return "".concat(encode(k), "=").concat(encode(x));
    }).join("&");
  }).filter(Boolean).join("&");
  if (str) {
    var hashIndex = url.indexOf("#");
    if (hashIndex !== -1) {
      url = url.slice(0, hashIndex);
    }
    url += (url.indexOf("?") === -1 ? "?" : "&") + str;
  }
  return url;
}
function createResponse(data, done, response, contentLength, age, startTime, firstByteTime, index, range, vid, priOptions) {
  age = age !== null && age !== void 0 ? parseFloat(age) : null;
  contentLength = parseInt(contentLength || "0", 10);
  if (Number.isNaN(contentLength))
    contentLength = 0;
  var options = {
    range,
    vid,
    index,
    contentLength,
    age,
    startTime,
    firstByteTime,
    endTime: Date.now(),
    priOptions
  };
  return {
    data,
    done,
    options,
    response
  };
}
function calculateSpeed(byteLen, millisec) {
  return Math.round(byteLen * 8 * 1e3 / millisec / 1024);
}
export { calculateSpeed, createResponse, getRangeValue, setUrlParams };
