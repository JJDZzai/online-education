import { createClass as _createClass, classCallCheck as _classCallCheck, defineProperty as _defineProperty } from "../_virtual/_rollupPluginBabelHelpers.js";
import { TrackType, AudioCodecType } from "./types.js";
var AudioTrack = /* @__PURE__ */ function() {
  function AudioTrack2() {
    _classCallCheck(this, AudioTrack2);
    _defineProperty(this, "id", 2);
    _defineProperty(this, "type", TrackType.AUDIO);
    _defineProperty(this, "codecType", AudioCodecType.AAC);
    _defineProperty(this, "pid", -1);
    _defineProperty(this, "codec", "");
    _defineProperty(this, "sequenceNumber", 0);
    _defineProperty(this, "sampleDuration", 0);
    _defineProperty(this, "timescale", 0);
    _defineProperty(this, "formatTimescale", 0);
    _defineProperty(this, "baseMediaDecodeTime", 0);
    _defineProperty(this, "duration", 0);
    _defineProperty(this, "warnings", []);
    _defineProperty(this, "samples", []);
    _defineProperty(this, "baseDts", 0);
    _defineProperty(this, "sampleSize", 16);
    _defineProperty(this, "sampleRate", 0);
    _defineProperty(this, "channelCount", 0);
    _defineProperty(this, "objectType", 0);
    _defineProperty(this, "sampleRateIndex", 0);
    _defineProperty(this, "config", []);
    _defineProperty(this, "present", false);
    _defineProperty(this, "isVideoEncryption", false);
    _defineProperty(this, "isAudioEncryption", false);
    _defineProperty(this, "kid", null);
    _defineProperty(this, "ext", void 0);
  }
  _createClass(AudioTrack2, [{
    key: "reset",
    value: function reset() {
      this.sequenceNumber = 0;
      this.timescale = 0;
      this.sampleDuration = 0;
      this.sampleRate = 0;
      this.channelCount = 0;
      this.baseMediaDecodeTime = 0;
      this.present = false;
      this.pid = -1;
      this.codec = "";
      this.samples = [];
      this.config = [];
      this.warnings = [];
    }
  }, {
    key: "exist",
    value: function exist() {
      return !!(this.sampleRate && this.channelCount && this.codec && this.codecType === AudioCodecType.AAC);
    }
  }, {
    key: "hasSample",
    value: function hasSample() {
      return !!this.samples.length;
    }
  }, {
    key: "isEncryption",
    get: function get() {
      return this.isAudioEncryption;
    }
  }]);
  return AudioTrack2;
}();
export { AudioTrack };
