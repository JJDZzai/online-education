export class VideoTrack {
    id: number;
    /** @readonly */
    readonly type: string;
    codecType: string;
    pid: number;
    /** @type {Uint8Array | Object} */
    hvcC: Uint8Array | any;
    codec: string;
    timescale: number;
    formatTimescale: number;
    sequenceNumber: number;
    baseMediaDecodeTime: number;
    baseDts: number;
    duration: number;
    warnings: any[];
    /** @type {import('./video-sample').VideoSample[]} */
    samples: import('./video-sample').VideoSample[];
    /** @type {Uint8Array[]} */
    pps: Uint8Array[];
    /** @type {Uint8Array[]} */
    sps: Uint8Array[];
    /** @type {Uint8Array[]} */
    vps: Uint8Array[];
    fpsNum: number;
    fpsDen: number;
    /** @type {[number, number]} */
    sarRatio: [number, number];
    width: number;
    height: number;
    nalUnitSize: number;
    present: boolean;
    isVideoEncryption: boolean;
    isAudioEncryption: boolean;
    isVideo: boolean;
    kid: any;
    pssh: any;
    /** @type {any} */
    ext: any;
    reset(): void;
    /**
     * @returns {boolean}
     */
    exist(): boolean;
    /**
     * @returns {boolean}
     */
    hasSample(): boolean;
    get isEncryption(): boolean;
}
