/**
 * @typedef {Object} RemuxResult
 * @property {Uint8Array} [videoInitSegment]
 * @property {Uint8Array} [audioInitSegment]
 * @property {Uint8Array} [videoSegment]
 * @property {Uint8Array} [audioSegment]
 */
export class FMP4Remuxer {
    /**
     * @param {import('../model').VideoTrack} videoTrack
     * @param {import('../model').AudioTrack} audioTrack
     */
    constructor(videoTrack: import('../model').VideoTrack, audioTrack: import('../model').AudioTrack, options: any);
    videoTrack: import("../model").VideoTrack;
    audioTrack: import("../model").AudioTrack;
    forceFirstIDR: boolean;
    log: Logger;
    /**
     * @param {boolean} [createInit=false]
     * @returns {RemuxResult}
     */
    remux(createInit?: boolean, options?: {}): RemuxResult;
    _remuxVideo(): Uint8Array;
    _remuxAudio(): Uint8Array;
    reset(): void;
}
export type RemuxResult = {
    videoInitSegment?: Uint8Array;
    audioInitSegment?: Uint8Array;
    videoSegment?: Uint8Array;
    audioSegment?: Uint8Array;
};
import { Logger } from "./logger";
