import { defineProperty as _defineProperty, createClass as _createClass, classCallCheck as _classCallCheck } from "../_virtual/_rollupPluginBabelHelpers.js";
var Logger = /* @__PURE__ */ function() {
  function Logger2(name, enable) {
    _classCallCheck(this, Logger2);
    this.name = name || "";
    this._prefix = "[".concat(this.name, "]");
    Logger2.disabled = enable;
  }
  _createClass(Logger2, [{
    key: "debug",
    value: function debug() {
      var _console;
      if (Logger2.disabled)
        return;
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      (_console = console).debug.apply(_console, [this._prefix].concat(args));
    }
  }, {
    key: "log",
    value: function log() {
      var _console2;
      if (Logger2.disabled)
        return;
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }
      (_console2 = console).log.apply(_console2, [this._prefix].concat(args));
    }
  }, {
    key: "warn",
    value: function warn() {
      var _console3;
      if (Logger2.disabled)
        return;
      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        args[_key3] = arguments[_key3];
      }
      (_console3 = console).warn.apply(_console3, [this._prefix].concat(args));
    }
  }, {
    key: "error",
    value: function error() {
      var _console4;
      if (Logger2.disabled)
        return;
      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
        args[_key4] = arguments[_key4];
      }
      (_console4 = console).error.apply(_console4, [this._prefix].concat(args));
    }
  }, {
    key: "table",
    value: function table() {
      var _console5;
      if (Logger2.disabled)
        return;
      console.group(this._prefix);
      (_console5 = console).table.apply(_console5, arguments);
      console.groupEnd();
    }
  }], [{
    key: "enable",
    value: function enable() {
      Logger2.disabled = false;
    }
  }, {
    key: "disable",
    value: function disable() {
      Logger2.disabled = true;
    }
  }]);
  return Logger2;
}();
_defineProperty(Logger, "disabled", true);
export { Logger };
