export class MP4Demuxer {
    static probe(data: any): boolean;
    constructor(videoSegmnents: any, audioSegmnents: any, metadataTrack: any, options: any);
    _videoSamples: any[];
    _audioSamples: any[];
    _lastRemainBuffer: any[];
    _lastRemainBufferStartPos: number;
    videoTrack: VideoTrack;
    audioTrack: AudioTrack;
    metadataTrack: any;
    log: Logger;
    parseSamples(moov: any): void;
    videoSenc: any;
    audioSenc: any;
    demux(data: any, dataStart: any, videoIndexRange: any, audioIndexRange: any, moov: any): {
        videoTrack: VideoTrack;
        audioTrack: AudioTrack;
        metadataTrack: any;
    };
    demuxPart(data: any, dataStart: any, videoIndexRange: any, audioIndexRange: any, moov: any, useEME: any, kidValue: any, customDescryptHandler: any): {
        videoTrack: VideoTrack;
        audioTrack: AudioTrack;
        metadataTrack: any;
    };
    reset(): void;
    decoderData(videoTrack: any, audioTrack: any, customDescryptHandler: any): void;
}
import { VideoTrack } from "../model";
import { AudioTrack } from "../model";
import { Logger } from "./logger";
