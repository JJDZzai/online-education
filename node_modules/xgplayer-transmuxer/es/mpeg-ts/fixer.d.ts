export class TsFixer {
    constructor(videoTrack: any, audioTrack: any, metadataTrack: any);
    videoTrack: any;
    audioTrack: any;
    metadataTrack: any;
    _baseDts: number;
    _baseDtsInited: boolean;
    _audioNextPts: any;
    _videoNextDts: any;
    _audioTimestampBreak: boolean;
    _videoTimestampBreak: boolean;
    _lastAudioExceptionGapDot: number;
    _lastAudioExceptionOverlapDot: number;
    _lastAudioExceptionLargeGapDot: number;
    fix(startTime?: number, discontinuity?: boolean, contiguous?: boolean): void;
    _fixVideo(videoTrack: any): void;
    _fixAudio(audioTrack: any): void;
    _calculateBaseDts(audioTrack: any, videoTrack: any): boolean;
    _resetBaseDtsWhenStreamBreaked(): void;
    _audioLastSample: any;
    _videoLastSample: any;
    _doFixAudioInternal(audioTrack: any, samples: any, timescale: any): void;
}
