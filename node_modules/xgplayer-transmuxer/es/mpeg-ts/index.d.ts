export class TsDemuxer {
    /**
     * @param { Uint8Array } data
     * @returns {boolean}
     */
    static probe(data: Uint8Array): boolean;
    static _parsePES(data: any): {
        data: any;
        pts: number;
        dts: number;
    };
    /**
     * @param {VideoTrack} [videoTrack]
     * @param {AudioTrack} [audioTrack]
     * @param {MetadataTrack} [metadataTrack]
     */
    constructor(videoTrack?: VideoTrack, audioTrack?: AudioTrack, metadataTrack?: MetadataTrack);
    _pmtId: number;
    _remainingPacketData: any;
    _videoPesData: any[];
    _audioPesData: any[];
    _gopId: number;
    videoTrack: VideoTrack;
    audioTrack: AudioTrack;
    metadataTrack: MetadataTrack;
    _fixer: TsFixer;
    /**
     * @param {Uint8Array} data
     * @param {boolean} [discontinuity=false]
     * @param {boolean} [contiguous=true]
     * @returns {import('../flv').DemuxResult}
     */
    demux(data: Uint8Array, discontinuity?: boolean, contiguous?: boolean): import('../flv').DemuxResult;
    /**
     * @param {number} [startTime=0]
     * @param {boolean} [discontinuity=false]
     * @param {boolean} [contiguous=true]
     */
    fix(startTime?: number, discontinuity?: boolean, contiguous?: boolean): {
        videoTrack: VideoTrack;
        audioTrack: AudioTrack;
        metadataTrack: MetadataTrack;
    };
    /**
     * @param {Uint8Array} data
     * @param {boolean} [discontinuity=false]
     * @param {boolean} [contiguous=true]
     * @param {number} [startTime=0]
     */
    demuxAndFix(data: Uint8Array, discontinuity?: boolean, contiguous?: boolean, startTime?: number): {
        videoTrack: VideoTrack;
        audioTrack: AudioTrack;
        metadataTrack: MetadataTrack;
    };
    _parseVideoData(): void;
    _createVideoSample(units: any, pts: any, dts: any): void;
    _pushVideoSample(track: any, sample: any): void;
    _parseAudioData(): void;
    _parseAacData(pes: any): void;
}
import { VideoTrack } from "../model";
import { AudioTrack } from "../model";
import { MetadataTrack } from "../model/metadata-track";
import { TsFixer } from "./fixer";
