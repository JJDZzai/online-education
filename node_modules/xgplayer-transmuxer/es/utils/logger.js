import { defineProperty as _defineProperty, createClass as _createClass, classCallCheck as _classCallCheck } from "../_virtual/_rollupPluginBabelHelpers.js";
var Logger = /* @__PURE__ */ function() {
  function Logger2(name) {
    _classCallCheck(this, Logger2);
    this.name = name || "";
    this._prefix = "[".concat(this.name, "]");
  }
  _createClass(Logger2, [{
    key: "warn",
    value: function warn() {
      var _console;
      if (Logger2.disabled)
        return;
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      (_console = console).warn.apply(_console, [this._prefix].concat(args));
    }
  }], [{
    key: "enable",
    value: function enable() {
      Logger2.disabled = false;
    }
  }, {
    key: "disable",
    value: function disable() {
      Logger2.disabled = true;
    }
  }]);
  return Logger2;
}();
_defineProperty(Logger, "disabled", true);
export { Logger };
